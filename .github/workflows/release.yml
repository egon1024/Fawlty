name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install MkDocs
        run: |
          poetry install

      - name: Extract package version
        id: package_version
        run: |
          PACKAGE_VERSION=$(poetry version -s)
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Check for existing release
        run: |
          if gh release view ${{ env.PACKAGE_VERSION }}; then
            echo "Previous release with version ${{ env.PACKAGE_VERSION }} exists"
            exit 1
          else
            echo "Success: No previous release with version ${{ env.PACKAGE_VERSION }}"
          fi

      - name: Build Package
        run: |
          poetry build && ls -lhR .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PACKAGE_VERSION }}
          release_name: ${{ env.PACKAGE_VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/fawlty-${{ env.PACKAGE_VERSION }}-py3-none-any.whl
          asset_name: fawlty-${{ env.PACKAGE_VERSION }}-py3-none-any.whl
          asset_content_type: application/gzip

      - name: Pull gh-pages branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin gh-pages:gh-pages
          git checkout gh-pages
          git pull origin gh-pages
          git checkout main

      - name: Deploy Documentation
        run: |
          make deploy-docs
